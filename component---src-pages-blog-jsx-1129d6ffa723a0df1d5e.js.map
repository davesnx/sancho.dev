{"version":3,"sources":["webpack:///./src/components/text.jsx","webpack:///./src/components/heading.jsx","webpack:///./src/pages/blog.jsx"],"names":["styles","css","font","fontSize1","sans","colors","black","styled","p","props","align","raw","Heading","padded","H1","h1","fonts","fontSize5","H3","fontSize4","h3","fontSize3","fontSize2","fontSize0","BlogLink","Navigate","data","site","siteMetadata","siteUrl","description","title","defaultTitle","titleTemplate","property","content","allMdx","edges","map","node","key","id","to","fields","slug","frontmatter","date","excerpt","query"],"mappings":"6FAAA,wCAIaA,EAASC,YAAH,sFAEJC,IAAKC,UACHD,IAAKE,KAEXC,IAAOC,OAIHC,QAAOC,EAAtB,0DAAeD,CAAf,2CACIP,GAEY,SAAAS,GAAK,MAAqB,WAAhBA,EAAMC,MAAqB,SAAW,UAC7C,SAAAD,GAAK,OAAMA,EAAME,IAAe,GAAT,W,kCCjB1C,4GAIMC,EAAUX,YAAH,yBAKPY,EAAM,mDAKCC,EAAKP,IAAOQ,GAAV,8DAAGR,CAAH,4EACXK,EAEcI,IAAMZ,KACTY,IAAMC,UAEVZ,IAAOC,OAEd,SAAAG,GAAK,OAAMA,EAAME,IAAP,GAAaE,KAcdK,GARKF,IAAMZ,KACTY,IAAMG,UAEVd,IAAOC,MAKAC,IAAOa,GAAV,8DAAGb,CAAH,4EACXK,EAEcI,IAAMZ,KACTY,IAAMK,UAEVhB,IAAOC,OAEd,SAAAG,GAAK,OAAMA,EAAME,IAAP,GAAaE,MAMTG,IAAMZ,KACTY,IAAMM,UAEVjB,IAAOC,MAQAU,IAAMZ,KACTY,IAAMb,UAEVE,IAAOC,MAQAU,IAAMZ,KACTY,IAAMO,UAEVlB,IAAOC,O,oCC3ElB,8IASMkB,EAAWjB,YAAOkB,KAAV,qEAAGlB,CAAH,uGASC,sBAAe,IAAZmB,EAAW,EAAXA,KAAW,EAKvBA,EAHFC,KACEC,aAAgBC,EAHO,EAGPA,QAASC,EAHF,EAGEA,YAAaC,EAHf,EAGeA,MAI1C,OACE,oCACE,kBAAC,SAAD,CAAQC,aAAcD,EAAOE,cAAa,QAAUF,GAClD,0BAAMG,SAAS,WAAWC,QAASJ,IACnC,0BAAMG,SAAS,iBAAiBC,QAASL,IACzC,0BAAMI,SAAS,SAASC,QAASN,IACjC,0BAAMK,SAAS,UAAUC,QAAQ,aAGnC,kBAAC,IAAD,CAAMJ,MAAO,kBAAC,IAAD,CAAIpB,KAAG,GAAP,aACVe,EAAKU,OAAOC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACrB,yBAAKC,IAAKD,EAAKE,IACb,kBAACjB,EAAD,CAAUkB,GAAIH,EAAKI,OAAOC,MACxB,kBAAC,IAAD,CAAIjC,KAAG,GAAE4B,EAAKM,YAAYd,OAC1B,kBAAC,IAAD,CAAMpB,KAAG,GAAE4B,EAAKM,YAAYC,OAE9B,kBAAC,IAAD,KAAOP,EAAKQ,gBAQjB,IAAMC,EAAK","file":"component---src-pages-blog-jsx-1129d6ffa723a0df1d5e.js","sourcesContent":["import styled, { css } from \"styled-components\";\nimport font from \"./fonts\";\nimport colors from \"./colors\";\n\nexport const styles = css`\n  font-weight: 200;\n  font-size: ${font.fontSize1};\n  font-family: ${font.sans};\n  line-height: 1.7;\n  color: ${colors.black};\n  margin: 0;\n`;\n\nexport default styled.p`\n  ${styles};\n\n  text-align: ${props => (props.align === \"center\" ? \"center\" : \"left\")}};\n  margin-bottom: ${props => (!props.raw ? \"24px\" : \"\")};\n`;\n","import fonts from \"./fonts\";\nimport colors from \"./colors\";\nimport styled, { css } from \"styled-components\";\n\nconst Heading = css`\n  margin: 0;\n  padding: 0;\n`;\n\nconst padded = `\n  margin-top: 2.5rem;\n  margin-bottom: 1rem\n`;\n\nexport const H1 = styled.h1`\n  ${Heading};\n\n  font-family: '${fonts.sans}';\n  font-size: ${fonts.fontSize5};\n  letter-spacing: 0.8px;\n  color: ${colors.black};\n\n  ${props => (!props.raw ? padded : ``)};\n`;\n\nexport const H2 = styled.h2`\n  ${Heading};\n\n  font-family: '${fonts.sans}';\n  font-size: ${fonts.fontSize4};\n  letter-spacing: 0.7px;\n  color: ${colors.black};\n\n  ${props => (!props.raw ? padded : ``)};\n`;\n\nexport const H3 = styled.h3`\n  ${Heading};\n\n  font-family: '${fonts.sans}';\n  font-size: ${fonts.fontSize3};\n  letter-spacing: 0.6px;\n  color: ${colors.black};\n\n  ${props => (!props.raw ? padded : ``)};\n`;\n\nexport const H4 = styled.h4`\n  ${Heading};\n\n  font-family: '${fonts.sans}';\n  font-size: ${fonts.fontSize2};\n  letter-spacing: 0.5px;\n  color: ${colors.black};\n\n  ${props => (!props.raw ? padded : ``)};\n`;\n\nexport const H5 = styled.h5`\n  ${Heading};\n\n  font-family: '${fonts.sans}';\n  font-size: ${fonts.fontSize1};\n  letter-spacing: 0.5px;\n  color: ${colors.black};\n\n  ${props => (!props.raw ? padded : ``)};\n`;\n\nexport const H6 = styled.h6`\n  ${Heading};\n\n  font-family: '${fonts.sans}';\n  font-size: ${fonts.fontSize0};\n  letter-spacing: 0.4px;\n  color: ${colors.black};\n\n  ${props => (!props.raw ? padded : ``)};\n`;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"styled-components\";\nimport { Link as Navigate, graphql } from \"gatsby\";\n\nimport Text from \"./../components/text\";\nimport Page from \"./../components/page\";\nimport { H1, H3 } from \"./../components/heading\";\n\nconst BlogLink = styled(Navigate)`\n  color: inherit;\n  text-decoration: none;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport default ({ data }) => {\n  const {\n    site: {\n      siteMetadata: { siteUrl, description, title },\n    },\n  } = data;\n\n  return (\n    <>\n      <Helmet defaultTitle={title} titleTemplate={`%s | ${title}`}>\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:url\" content={siteUrl} />\n        <meta property=\"og:type\" content=\"website\" />\n      </Helmet>\n\n      <Page title={<H1 raw>Thoughts</H1>}>\n        {data.allMdx.edges.map(({ node }) => (\n          <div key={node.id}>\n            <BlogLink to={node.fields.slug}>\n              <H3 raw>{node.frontmatter.title}</H3>\n              <Text raw>{node.frontmatter.date}</Text>\n            </BlogLink>\n            <Text>{node.excerpt}</Text>\n          </div>\n        ))}\n      </Page>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteUrl\n        title\n        description\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}